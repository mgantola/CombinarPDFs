{"version":3,"sources":["config/theme.js","components/organism/ModalLoadingAlert/index.js","lib/provider/pdfProvider.js","components/organism/FilesDragDrop/index.js","components/pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","rand","Math","round","random","getModalStyle","top","left","transform","ModalLoadingAlert","props","handleOpen","setState","open","handleClose","handleCloseAfterUpload","loading","modalQuery","msg","err","success","respMsg","filesClearAndRemoveAll","handleLoadingProgress","handleResponseProgress","type","handleIdleProgress","state","isOpen","isLoading","clearModalStatus","nextProps","hasOwnProperty","this","classes","Modal","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","onClose","style","className","paper","Grid","container","spacing","justify","item","Typography","Button","variant","color","onClick","Fade","in","transitionDelay","unmountOnExit","CircularProgress","ModalLoadingAlertWrapped","React","Component","withStyles","theme","position","width","unit","backgroundColor","background","boxShadow","shadows","padding","outline","textAlign","mergeBetweenPDF","pdfFileList","returnObj","pdfFile","pdfNotMergedList","length","FileReader","onload","evt","console","log","target","result","pdfDoc","PDFDocumentFactory","create","iterPdfDoc","pdfFilePromiseArrayBufferList","iterPdfDocPages","forEach","push","fetch","URL","createObjectURL","then","res","arrayBuffer","Promise","all","pdfArrayBufferFileList","i","load","Uint8Array","getPages","pdfPage","addPage","name","PDFDocumentWriter","saveToBytes","catch","FilesDragDrop","files","hasFiles","modalOpen","modalLoading","modalMsg","onFilesChange","onFilesError","error","file","code","message","filesRemoveOne","refs","removeFile","filesRemoveAll","removeFiles","startMerge","tempMsg","PDFProvider","fileName","Date","toISOString","replace","saveSync","join","finally","dropFilesGridZone","ref","dropFilesZone","onChange","onError","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","dropFilesZoneDiv","map","sizeReadable","id","bind","dropFilesWarningGridZone","disabled","border","display","flexWrap","boxSizing","fontWeight","appBar","icon","marginRight","heroUnit","heroContent","maxWidth","margin","heroButtons","marginTop","layout","marginLeft","breakpoints","up","cardGrid","card","height","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","AppBar","Toolbar","noWrap","component","align","gutterBottom","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a3c21a2.chunk.js","sourcesContent":["import { createMuiTheme} from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = {\r\n    palette: {\r\n        primary: {\r\n            light: '#39796b',\r\n            main: '#004d40',\r\n            dark: '#00251a',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#484848',\r\n            main: '#212121',\r\n            dark: '#000000',\r\n            contrastText: '#fff',\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n};\r\n\r\nexport default createMuiTheme(theme);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: 'none',\r\n\ttextAlign: 'center'\r\n  },\r\n});\r\n\r\nclass ModalLoadingAlert extends React.Component {\r\n\tconstructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            open: props.isOpen ? props.isOpen : false,\r\n\t\t\tloading: props.isLoading,\r\n    \t\tmodalQuery: 'idle',\r\n\t\t\tmsg: props.msg,\r\n\t\t\trespMsg: null\r\n        }\r\n\t\tthis.filesClearAndRemoveAll = props.clearModalStatus\r\n    }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\t// You don't have to do this check first, but it can help prevent an unneeded render\r\n\t\t// if (nextProps.startTime !== this.state.startTime) {\r\n\t\t//   this.setState({ startTime: nextProps.startTime });\r\n\t\t// }\r\n\t\tif (nextProps.hasOwnProperty(\"isOpen\") && nextProps.hasOwnProperty(\"isLoading\") && nextProps.hasOwnProperty(\"msg\")) {\r\n\t\t\t// console.log(nextProps)\r\n\t\t\tif (nextProps.isOpen) this.handleOpen()\r\n\t\t\t// else this.handleClose()\r\n\r\n\t\t\tif (nextProps.isLoading) this.handleLoadingProgress()\r\n\t\t\telse {\r\n\t\t\t\tif (nextProps.msg.err != null) this.handleResponseProgress('error', nextProps.msg.err)\r\n\t\t\t\telse if (nextProps.msg.success != null) this.handleResponseProgress('success', nextProps.msg.success)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t}\r\n\r\n\thandleCloseAfterUpload = () => {\r\n\t\tthis.setState({ open: false, loading: false, modalQuery: 'idle', msg: { err: null, success: null }, respMsg: null });\r\n\t\tthis.filesClearAndRemoveAll()\r\n\t}\r\n\r\n\thandleLoadingProgress = () => {\r\n\t\tthis.setState({ loading: true, modalQuery: 'progress' });\r\n\t}\r\n\r\n\thandleResponseProgress = (type, msg) => {\r\n\t\tthis.setState({ loading: false, modalQuery: type, respMsg: msg });\r\n\t}\r\n\r\n\thandleIdleProgress = () => {\r\n\t\tthis.setState({ loading: false, modalQuery: 'idle' });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t  <div>\r\n\t\t    <Modal\r\n\t\t\t  disableBackdropClick\r\n\t\t\t  disableEscapeKeyDown\r\n\t\t      aria-labelledby=\"simple-modal-title\"\r\n\t\t      aria-describedby=\"simple-modal-description\"\r\n\t\t      open={this.state.open}\r\n\t\t      onClose={this.handleClose}\r\n\t\t    >\r\n\t\t\t      \t<div style={getModalStyle()} className={classes.paper}>\r\n\t\t\t\t  \t{\r\n\t\t\t\t\t\tthis.state.modalQuery !== 'progress' ? (\r\n\t\t\t\t\t\t\t<Grid container spacing={32} justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography>{this.state.respMsg}</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t        <Grid item>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleCloseAfterUpload}>\r\n\t\t\t\t\t\t\t\t\t\tNew merge\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t        </Grid>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t  \t<div>\r\n\t\t\t\t\t\t\t\t<Fade\r\n\t\t\t\t\t\t\t\t\tin={this.state.modalQuery === 'progress'}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t  transitionDelay: this.state.modalQuery === 'progress' ? '800ms' : '0ms',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t<Typography>Merging...</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t        <ModalLoadingAlertWrapped />\r\n\t\t      \t</div>\r\n\t\t    </Modal>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// We need an intermediary variable for handling the recursive nesting.\r\nconst ModalLoadingAlertWrapped = withStyles(styles)(ModalLoadingAlert);\r\n\r\nexport default ModalLoadingAlertWrapped;\r\n","import { PDFDocumentFactory, PDFDocumentWriter } from 'pdf-lib';\r\n\r\nfunction mergeBetweenPDF(pdfFileList) {\r\nlet returnObj = { pdfFile: null, pdfNotMergedList: [] }\r\n\r\n    if (pdfFileList.length > 0) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = function(evt) { console.log(evt.target.result); };\r\n\r\n\t\tconst pdfDoc = PDFDocumentFactory.create();\r\n\t\tlet iterPdfDoc = PDFDocumentFactory.create();\r\n\t\t// let iterPdfDocBytes;\r\n\t\tlet pdfFilePromiseArrayBufferList = [];\r\n\t\tlet pdfNotMergedList = [];\r\n\t\tlet iterPdfDocPages = [];\r\n\r\n\t\t// Get all file URLs into a list using Promises and fetch API\r\n\t\tpdfFileList.forEach((pdfFile) => {\r\n\t\t\t// console.log(pdfFile)\r\n\t\t\tpdfFilePromiseArrayBufferList.push(\r\n\t\t\t\tfetch(URL.createObjectURL(pdfFile))\r\n\t\t\t\t\t.then(res => res.arrayBuffer())\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn Promise\r\n\t\t\t.all(pdfFilePromiseArrayBufferList)\r\n\t\t\t.then((pdfArrayBufferFileList) => {\r\n\t\t\t\tfor (let i = 0; i < pdfArrayBufferFileList.length; i++) {\r\n\t\t\t\t\t// console.log(pdfArrayBufferFileList[i])\r\n\t\t\t\t\t// iterPdfDocBytes = reader.readAsArrayBuffer(pdfBlob)\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.load(new Uint8Array(pdfArrayBufferFileList[i]))\r\n\t\t\t\t\t\titerPdfDocPages = iterPdfDoc.getPages()\r\n\t\t\t\t\t\titerPdfDoc = PDFDocumentFactory.create();\r\n\t\t\t\t\t\t// Add each page in a temp file to check if all pages from this PDF can be added in the final one\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\titerPdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t// No errors? Then add all pages to the final PDF\r\n\t\t\t\t\t\titerPdfDocPages.forEach((pdfPage) => {\r\n\t\t\t\t\t\t\tpdfDoc.addPage(pdfPage)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t\t// console.log(\"File \" + pdfFileList[i].name + \" not merged due to the following error: \" + err.message)\r\n\t\t\t\t\t\tpdfNotMergedList.push(pdfFileList[i].name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturnObj.pdfFile = PDFDocumentWriter.saveToBytes(pdfDoc)\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\treturnObj.pdfFile = null\r\n\t\t\t\treturnObj.pdfNotMergedList = pdfNotMergedList\r\n\t\t\t\treturn returnObj\r\n\t\t\t})\r\n    }\r\n}\r\n\r\nexport default {\r\n\tmergeBetweenPDF\r\n}\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Files from 'react-files';\r\nimport ModalLoadingAlert from '../ModalLoadingAlert';\r\nimport PDFProvider from '../../../lib/provider/pdfProvider';\r\nimport { saveSync } from 'save-file'\r\n\r\nclass FilesDragDrop extends Component {\r\n  state = {\r\n\t  files: [],\r\n\t  hasFiles: false,\r\n\t  modalOpen: false,\r\n\t  modalLoading: false,\r\n\t  modalMsg: {\r\n\t\t  err: null,\r\n\t\t  success: null\r\n\t  }\r\n  }\r\n\r\n  onFilesChange = (files) => {\r\n      this.setState({\r\n          files,\r\n\t\t  hasFiles: files.length > 0 ? true : false\r\n      }, () => {\r\n          // console.log(this.state)\r\n      })\r\n\r\n      // this.setState({value: event.target.value}, function () {\r\n      //     console.log(this.state.value);\r\n      // });\r\n  }\r\n\r\n  onFilesError = (error, file) => {\r\n      console.log('[LOG] Error code ' + error.code + ': ' + error.message)\r\n  }\r\n\r\n  filesRemoveOne = (file) => {\r\n      this.refs.files.removeFile(file)\r\n  }\r\n\r\n  filesClearAndRemoveAll = () => {\r\n      this.setState({\r\n\t\t  modalOpen: false,\r\n\t\t  modalLoading: false,\r\n\t\t  modalMsg: {\r\n\t\t\t  err: null,\r\n\t\t\t  success: null\r\n\t\t  }\r\n      }, () => {\r\n\t\t  this.filesRemoveAll()\r\n      })\r\n  }\r\n\r\n  filesRemoveAll = () => {\r\n      this.setState({\r\n          files: [],\r\n\t\t  hasFiles: false\r\n      }, () => {\r\n\t\t  this.refs.files.removeFiles()\r\n      })\r\n  }\r\n\r\n  startMerge = () => {\r\n\t  let tempMsg\r\n\t  this.setState({\r\n          files: this.state.files,\r\n\t\t  hasFiles: false,\r\n\t\t  modalOpen: true,\r\n\t\t  modalLoading: true\r\n      }, () => {\r\n\t\t  // this.refs.modal.handleOpen()\r\n          console.log(\"[LOG] Starting merge...\")\r\n      })\r\n\r\n\t  PDFProvider.mergeBetweenPDF(this.state.files)\r\n\t  \t.then((res) => {\r\n\t\t\t// console.log(res)\r\n\t\t\tif (res && res.hasOwnProperty(\"pdfFile\")) {\r\n\t\t\t\tif (res.pdfFile) {\r\n\t\t\t\t\tif (res.pdfNotMergedList.length !== this.state.files.length) {\r\n\t\t\t\t\t\tconst fileName = \"output_merge_\" + new Date().toISOString().replace(\":\",\"_\").replace(\"T\",\"_\").replace(\"Z\",\"\") + \".pdf\"\r\n\t\t\t\t\t\tsaveSync(res.pdfFile, fileName)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (res.pdfNotMergedList.length > 0) {\r\n\t\t\t\t\t\tif (res.pdfNotMergedList.length > 0 && res.pdfNotMergedList.length === this.state.files.length) {\r\n\t\t\t\t\t\t\ttempMsg = \"No merge PDF output could be done. Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttempMsg = \"Following files have problem and need to be merged manually: \" + res.pdfNotMergedList.join(\", \")\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Modal closed.\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttempMsg = \"Merge totally successfull and downloaded!\"\r\n\t\t\t\t\t\tconsole.log(\"[LOG] \" + tempMsg)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  \t\tmodalOpen: true,\r\n\t\t\t\t\t  \t\tmodalLoading: false,\r\n\t\t\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\t\t\terr: null,\r\n\t\t\t\t\t\t\t\tsuccess: tempMsg\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t        }, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttempMsg = \"Internal error at merging! Send this error to the developer in charge.\"\r\n\t\t\t\tconsole.log(tempMsg)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodalOpen: true,\r\n\t\t\t\t\tmodalLoading: false,\r\n\t\t\t\t\tmodalMsg: {\r\n\t\t\t\t\t\terr: tempMsg,\r\n\t\t\t\t\t\tsuccess: null\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => { console.log(\"[LOG] Closed modal\") })\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(\"[LOG] \" + err)\r\n\t\t})\r\n\t\t.finally(() => this.filesRemoveAll())\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"files\">\r\n        <Grid container spacing={32} justify=\"center\">\r\n          <Grid item className={classes.dropFilesGridZone}>\r\n            <Files\r\n\t\t\t  \t\t\tref='files'\r\n              className={classes.dropFilesZone}\r\n              onChange={this.onFilesChange}\r\n              onError={this.onFilesError}\r\n              accepts={['.pdf']}\r\n              multiple\r\n              maxFiles={1000}\r\n              maxFileSize={10000000}\r\n              minFileSize={0}\r\n              clickable\r\n            >\r\n              <div className={classes.dropFilesZoneDiv}>Suelta los archivos aquí o haz clic para subir</div>\r\n            </Files>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={32} justify=\"center\">\r\n          {\r\n            this.state.files.length > 0\r\n            ?\r\n\t\t\t\t\t\t\t<Grid item className={classes.dropFilesGridZone}>\r\n\t\t\t\t\t\t\t\t<div className='files-list'>\r\n\t\t\t\t\t\t\t\t\t<ul>{this.state.files.map((file) =>\r\n\t\t\t\t\t\t\t\t\t\t<li className='files-list-item' key={file.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content-item files-list-item-content-item-1'>{file.name}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='files-list-item-content-item files-list-item-content-item-2'>{file.sizeReadable}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={file.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='files-list-item-remove'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filesRemoveOne.bind(this, file)} // eslint-disable-line\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)}</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n            :\r\n\t\t\t\t\t\t\t<Grid item className={classes.dropFilesWarningGridZone}>\r\n\t\t\t\t\t\t\t\t<div className='files-list'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNo hay archivos seleccionados!\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n          }\r\n        </Grid>\r\n\r\n        <Grid container spacing={16} justify=\"center\">\r\n\t        <Grid item>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\"\r\n\t\t\t\t\t\t\tdisabled={!this.state.hasFiles}\r\n\t\t\t\t\t\t\tonClick={this.startMerge}>\r\n\t\t\t\t\t\t\tIniciar combinación\r\n\t\t\t\t\t\t</Button>\r\n\t        </Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={this.filesClearAndRemoveAll}>\r\n\t\t\t\t\t\t\t\tLimpiar selección\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n        </Grid>\r\n\r\n\t\t\t\t<ModalLoadingAlert\r\n\t\t\t\t\tisOpen={this.state.modalOpen}\r\n\t\t\t\t\tisLoading={this.state.modalLoading}\r\n\t\t\t\t\tmsg={this.state.modalMsg}\r\n\t\t\t\t\tclearModalStatus={this.filesClearAndRemoveAll} />\r\n\t\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n\tdropFilesGridZone: {\r\n\t\twidth: '70%'\r\n\t},\r\n\tdropFilesZone: {\r\n\t\tpadding: '2em',\r\n\t\tborder: '2px dashed rgba(0, 0, 0, .1)',\r\n\t\tcolor: 'rgba(0, 0, 0, .4)',\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\tboxSizing: 'border-box',\r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdropFilesZoneDiv: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tdropFilesWarningGridZone: {\r\n\t\twidth: '70%',\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: 'red',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles, { name: 'MuiFilesDragDrop' })(FilesDragDrop);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FilesDragDrop from '../../organism/FilesDragDrop';\r\n\r\nconst Home = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            COMBINAR PDFs\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit}>\r\n          <div className={classes.heroContent}>\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              COMBINA TUS PDFs\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <FilesDragDrop>\r\n              </FilesDragDrop>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: '0 auto',\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4,\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 8}px 0`,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React from 'react';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './config/theme';\r\nimport Home from './components/pages/Home'\r\n\r\nconst App = () => {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <Home/>\r\n        </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}